{"version":3,"sources":["infinite-scroll.js"],"names":["window","document","feedElement","buffer","ticking","loading","lastScrollY","lastWindowHeight","lastDocumentHeight","nextElement","querySelector","onPageLoad","this","status","removeEventListener","onScroll","onResize","response","querySelectorAll","forEach","item","appendChild","importNode","resNextElement","href","documentElement","scrollHeight","onUpdate","xhr","XMLHttpRequest","responseType","addEventListener","open","send","requestTick","requestAnimationFrame","scrollY","innerHeight","passive","menuTrigger","getElementById","menuPanel","menuList","firstElementChild","menuSkyLight","classList","add","remove","setTimeout"],"mappings":"CAeA,SAAAA,EAAAC,GAEA,IAMAC,EAKAC,EAEAC,EACAC,EAEAC,EACAC,EACAC,EAlBAC,EAAAR,EAAAS,cAAA,kBAoBA,SAAAC,IACA,GAAA,MAAAC,KAAAC,OAGA,OAFAb,EAAAc,oBAAA,SAAAC,QACAf,EAAAc,oBAAA,SAAAE,GAKAJ,KAAAK,SAAAC,iBAAA,cACAC,QAAA,SAAAC,GAIAlB,EAAAmB,YAAApB,EAAAqB,WAAAF,GAAA,MAIA,IAAAG,EAAAX,KAAAK,SAAAP,cAAA,kBACAa,EACAd,EAAAe,KAAAD,EAAAC,MAEAxB,EAAAc,oBAAA,SAAAC,GACAf,EAAAc,oBAAA,SAAAE,IAIAR,EAAAP,EAAAwB,gBAAAC,aAEArB,EADAD,GAAA,EAIA,SAAAuB,IAEA,IAYAC,EAZAvB,IAKAC,EAAAC,GAAAC,EAAAL,EACAC,GAAA,GAIAC,GAAA,GAEAuB,EAAA,IAAA5B,EAAA6B,gBACAC,aAAA,WAEAF,EAAAG,iBAAA,OAAApB,GAEAiB,EAAAI,KAAA,MAAAvB,EAAAe,MACAI,EAAAK,KAAA,QAGA,SAAAC,IACA9B,GAAAJ,EAAAmC,sBAAAR,GACAvB,GAAA,EAGA,SAAAW,IACAT,EAAAN,EAAAoC,QACAF,IAGA,SAAAlB,IACAT,EAAAP,EAAAqC,YACA7B,EAAAP,EAAAwB,gBAAAC,aACAQ,KAtFAzB,IAKAP,EAAAD,EAAAS,cAAA,iBAQAL,EADAD,IAFAD,EAAA,KAKAG,EAAAN,EAAAoC,QACA7B,EAAAP,EAAAqC,YACA7B,EAAAP,EAAAwB,gBAAAC,aAwEA1B,EAAA+B,iBAAA,SAAAhB,EAAA,CAAAuB,SAAA,IACAtC,EAAA+B,iBAAA,SAAAf,GAEAkB,KA/FA,CAgGAlC,OAAAC,UA/GA,WACA,IAAAsC,EAAAtC,SAAAuC,eAAA,kBACAC,EAAAxC,SAAAuC,eAAA,gBACAE,EAAAD,EAAAE,kBACAC,EAAA3C,SAAAuC,eAAA,mBAiBAvC,SAAA8B,iBAAA,mBAAA,WAdAQ,EAAAR,iBAAA,QAAA,WACAU,EAAAI,UAAAC,IAAA,cACAJ,EAAAG,UAAAC,IAAA,gBAGAF,EAAAb,iBAAA,QAAA,WACAW,EAAAG,UAAAE,OAAA,cAEAC,WAAA,WACAP,EAAAI,UAAAE,OAAA,eACA,SAjBA","file":"theme.js","sourcesContent":["/* eslint-env browser */\n\n/**\n * Infinite Scroll\n * Used on all pages where there is a list of posts (homepage, tag index, etc).\n *\n * When the page is scrolled to 300px from the bottom, the next page of posts\n * is fetched by following the the <link rel=\"next\" href=\"...\"> that is output\n * by {{ghost_head}}.\n *\n * The individual post items are extracted from the fetched pages by looking for\n * a wrapper element with the class \"post-card\". Any found elements are appended\n * to the element with the class \"post-feed\" in the currently viewed page.\n */\n\n(function (window, document) {\n    // next link element\n    var nextElement = document.querySelector(\"link[rel=next]\");\n    if (!nextElement) {\n        return;\n    }\n\n    // post feed element\n    var feedElement = document.querySelector(\".post-feed\");\n    if (!feedElement) {\n        return;\n    }\n\n    var buffer = 300;\n\n    var ticking = false;\n    var loading = false;\n\n    var lastScrollY = window.scrollY;\n    var lastWindowHeight = window.innerHeight;\n    var lastDocumentHeight = document.documentElement.scrollHeight;\n\n    function onPageLoad() {\n        if (this.status === 404) {\n            window.removeEventListener(\"scroll\", onScroll);\n            window.removeEventListener(\"resize\", onResize);\n            return;\n        }\n\n        // append contents\n        var postElements = this.response.querySelectorAll(\".post-card\");\n        postElements.forEach(function (item) {\n            // document.importNode is important, without it the item's owner\n            // document will be different which can break resizing of\n            // `object-fit: cover` images in Safari\n            feedElement.appendChild(document.importNode(item, true));\n        });\n\n        // set next link\n        var resNextElement = this.response.querySelector(\"link[rel=next]\");\n        if (resNextElement) {\n            nextElement.href = resNextElement.href;\n        } else {\n            window.removeEventListener(\"scroll\", onScroll);\n            window.removeEventListener(\"resize\", onResize);\n        }\n\n        // sync status\n        lastDocumentHeight = document.documentElement.scrollHeight;\n        ticking = false;\n        loading = false;\n    }\n\n    function onUpdate() {\n        // return if already loading\n        if (loading) {\n            return;\n        }\n\n        // return if not scroll to the bottom\n        if (lastScrollY + lastWindowHeight <= lastDocumentHeight - buffer) {\n            ticking = false;\n            return;\n        }\n\n        loading = true;\n\n        var xhr = new window.XMLHttpRequest();\n        xhr.responseType = \"document\";\n\n        xhr.addEventListener(\"load\", onPageLoad);\n\n        xhr.open(\"GET\", nextElement.href);\n        xhr.send(null);\n    }\n\n    function requestTick() {\n        ticking || window.requestAnimationFrame(onUpdate);\n        ticking = true;\n    }\n\n    function onScroll() {\n        lastScrollY = window.scrollY;\n        requestTick();\n    }\n\n    function onResize() {\n        lastWindowHeight = window.innerHeight;\n        lastDocumentHeight = document.documentElement.scrollHeight;\n        requestTick();\n    }\n\n    window.addEventListener(\"scroll\", onScroll, { passive: true });\n    window.addEventListener(\"resize\", onResize);\n\n    requestTick();\n})(window, document);\n"]}